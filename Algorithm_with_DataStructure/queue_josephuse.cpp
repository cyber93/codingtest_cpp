#include <iostream>
#include <queue>

using namespace std;

int josephus(int N, int K) {
    // Step 1: 큐 초기화 및 요소 삽입
    // 시간복잡도: O(N)
    // 큐를 초기화하고 1부터 N까지의 요소를 삽입합니다.
    // 예시: N = 5일 경우, 큐는 [1, 2, 3, 4, 5]로 초기화됩니다.
    queue<int> q;
    for (int i = 1; i <= N; ++i) {
        q.push(i);
    }

    // Step 2: 제거 과정 시뮬레이션
    // 시간복잡도: O(N * K)
    // 큐의 크기가 1이 될 때까지 반복합니다.
    while (q.size() > 1) {
        // 첫 번째 K-1개의 요소를 큐의 뒤로 이동시킵니다.
        for (int i = 0; i < K - 1; ++i) {
            q.push(q.front());
            q.pop();
        }
        // K번째 요소를 제거합니다.
        q.pop();
    }

    // 마지막으로 남은 요소가 생존자입니다.
    return q.front();
}

int main() {
    int N = 5; // 예시: 5명의 사람이 있을 때
    int K = 2; // 예시: 매 2번째 사람을 제거할 때

    // 생존자를 출력합니다.
    cout << "The survivor is: " << josephus(N, K) << endl;
    return 0;
}

/*
동작 과정 예시:
1. 큐 초기화: [1, 2, 3, 4, 5]
2. 첫 번째 반복:
   - [1, 2, 3, 4, 5] -> [2, 3, 4, 5, 1] -> [3, 4, 5, 1]
3. 두 번째 반복:
   - [3, 4, 5, 1] -> [4, 5, 1, 3] -> [5, 1, 3]
4. 세 번째 반복:
   - [5, 1, 3] -> [1, 3, 5] -> [3, 5]
5. 네 번째 반복:
   - [3, 5] -> [5, 3] -> [3]
6. 생존자: 3
*/
